"""
Django settings for playground project.

Generated by 'django-admin startproject' using Django 1.11.17.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j(_mkw50hm9at_y=%6)v5z)_^-*0^lmw+)c6q6b*ugo1%(rumy'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = bool(os.environ.get('DJANGO_DEBUG', True))
DEBUG = False

#ALLOWED_HOSTS = []
#ALLOWED_HOSTS = ['127.0.0.1', '0.0.0.0', '210.89.189.125', 'playfun.kr']
ALLOWED_HOSTS = ['127.0.0.1', '0.0.0.0', 'playfun.kr', 'www.playfun.kr', 'nojapan.info', 'www.nojapan.info']


# Application definition

INSTALLED_APPS = [
    #    'channels', # avoid to collision with apps:python3.5
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.gis',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'rest_framework_swagger',
    'bootstrap4',
    'bootstrap_modal_forms',
    'widget_tweaks',

    'django_crontab',

    'soccer',
    'comingsoon',
    'nojapan'
    #    'chat', : python3.5
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'playground.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'playground.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.mysql',
		'NAME':'playground',
		'USER':'root',
		'PASSWORD':'gnsrjs833',
		'HOST':'127.0.0.1',
		'PORT':'3306'
	}
}
DATABASES_OPTIONS = {'charset' : 'utf8'}



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# logging 
LOG_FILE  = os.path.join(BASE_DIR, 'log' ,'soccer.log')
LOGGING = { 
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': { 
        'format1': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s', 
            'datefmt': '%d/%b/%Y %H:%M:%S' 
            },
        'format2': { 
            'format': '%(levelname)s %(message)s'
            }, 
    }, 
    'handlers': { 
        'logfile': { 
            'level': 'INFO', 
            'class': 'logging.handlers.RotatingFileHandler', 
            'filename': LOG_FILE,
            'formatter': 'format1', 
            'maxBytes': 10*1024*1024,
            'backupCount': 20,    
        },
        'console': { 
            'level': 'DEBUG',
            'class': 'logging.StreamHandler', 
            'formatter': 'format2', 
        } 
    }, 
    'loggers': {
        'nojpan': {
            'handlers': ['logfile'],
            'level': 'INFO',
            'propagate': True,
        },
        'soccer': {
            'handlers': ['logfile'],
            'level': 'INFO',
            'propagate': True,
        },
        'goaccess': {
            'handlers': ['logfile'],
            'level': 'INFO',
            'propagate': True,
        },
        'django_crontab': {
            'handlers': ['logfile'],
            'level': 'INFO',
            'propagate': True,
        },
    }, 
}

#Crontab
CRONJOBS = [
    ('0 */2 * * *', 'soccer.cron.func1')
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# Channels
ASGI_APPLICATION = 'playground.routing.application'

# Apache access log file to be used in goaccess
APACHE_LOG = '/var/log/apache2/playfun.log'
